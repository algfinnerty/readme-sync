{
    "openapi": "3.0.1",
    "info": {
      "title": "Creating Donations",
      "description": "The Donations API tracks all updates to donations from all sources all around ShoppingGives and paid out to the charity",
      "version": "v1"
    },
    "servers": [
      {
        "url": "https://donations.api.shoppinggives.com"
      }
    ],
    "paths": {
      "/": {
        "post": {
          "tags": [
            "Donations"
          ],
          "summary": "Create a donation",
          "description": "Authorization: Store:Donation:Create\r\n            \r\nDonations generated through this endpoint will be placed\r\n on the store's currently open receivable and charged for the donation \r\nlike any other e-commerce driven donation",
          "parameters": [
            {
              "name": "x-store-id",
              "in": "header",
              "description": "Store ID",
              "schema": {
                "type": "string",
                "description": "Store ID",
                "nullable": true,
                "example": "321944e1-470d-4b0d-a3d8-cf4c96b5b88f"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDonationRequest"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDonationRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDonationRequest"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDonationRequest"
                }
              }
            }
          },
          "responses": {
            "400": {
              "description": "Donation amount isn't greater than 0",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/DocErrorResponse"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DocErrorResponse"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DocErrorResponse"
                  }
                }
              }
            },
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/IdResponse"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/IdResponse"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/IdResponse"
                  }
                }
              }
            }
          },
          "security": [
            {
              "bearer": [ ]
            },
            {
              "API Key": [ ]
            }
          ]
        }
      },
      "/reporting/by-sale-id": {
        "get": {
          "tags": [
            "Donations"
          ],
          "summary": "Get donations by sale id",
          "description": "Authorization: Store:Donation:Read",
          "parameters": [
            {
              "name": "saleId",
              "in": "query",
              "description": "ShoppingGives SaleId",
              "schema": {
                "type": "string",
                "description": "ShoppingGives SaleId",
                "nullable": true,
                "example": "d8b3bf08-85ca-4952-80e8-ff8b39eab8b6"
              }
            },
            {
              "name": "x-store-id",
              "in": "header",
              "description": "ShoppingGives StoreId",
              "schema": {
                "type": "string",
                "description": "ShoppingGives StoreId",
                "nullable": true,
                "example": "321944e1-470d-4b0d-a3d8-cf4c96b5b88f"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DonationResponse"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DonationResponse"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DonationResponse"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Donations requested do not belong to store id supplied"
            }
          },
          "security": [
            {
              "bearer": [ ]
            },
            {
              "API Key": [ ]
            }
          ]
        }
      },
      "/reporting/by-receivable-id": {
        "get": {
          "tags": [
            "Donations"
          ],
          "summary": "Get donations by receivable id",
          "description": "Authorization: Store:Donation:Read",
          "parameters": [
            {
              "name": "receivableId",
              "in": "query",
              "description": "ShoppingGives Receivable ID",
              "schema": {
                "type": "string",
                "description": "ShoppingGives Receivable ID",
                "nullable": true,
                "example": "c1fec9cd-2975-43a0-bb8e-d3db5f534ea6"
              }
            },
            {
              "name": "x-store-id",
              "in": "header",
              "description": "ShoppingGives Store ID",
              "schema": {
                "type": "string",
                "description": "ShoppingGives Store ID",
                "nullable": true,
                "example": "321944e1-470d-4b0d-a3d8-cf4c96b5b88f"
              }
            },
            {
              "name": "simple",
              "in": "query",
              "description": "Whether to provide full data vs simple data",
              "schema": {
                "type": "boolean",
                "description": "Whether to provide full data vs simple data",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DonationResponse"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DonationResponse"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DonationResponse"
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Donations requested do not belong to store id supplied"
            }
          },
          "security": [
            {
              "bearer": [ ]
            },
            {
              "API Key": [ ]
            }
          ]
        }
      },
      "/reporting/customer/{id}/total-donation": {
        "get": {
          "tags": [
            "Donations"
          ],
          "summary": "Get total donations for customer",
          "description": "Authorization: Store:Donation:Read",
          "parameters": [
            {
              "name": "x-store-id",
              "in": "header",
              "description": "ShoppingGives Store ID",
              "schema": {
                "type": "string",
                "description": "ShoppingGives Store ID",
                "format": "uuid",
                "example": "321944e1-470d-4b0d-a3d8-cf4c96b5b88f"
              }
            },
            {
              "name": "id",
              "in": "path",
              "description": "Store's Customer ID",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Store's Customer ID",
                "nullable": true,
                "example": "CUST01234"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/CustomerDonationTotalsResponse"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CustomerDonationTotalsResponse"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CustomerDonationTotalsResponse"
                  }
                }
              }
            }
          },
          "security": [
            {
              "bearer": [ ]
            },
            {
              "API Key": [ ]
            }
          ]
        }
      },
      "/reporting/customer/{id}/cause-breakdown": {
        "get": {
          "tags": [
            "Donations"
          ],
          "summary": "Get cause breakdown for customer donations",
          "description": "Authorization: Store:Donation:Read",
          "parameters": [
            {
              "name": "x-store-id",
              "in": "header",
              "description": "ShoppingGives Store ID",
              "schema": {
                "type": "string",
                "description": "ShoppingGives Store ID",
                "format": "uuid",
                "example": "321944e1-470d-4b0d-a3d8-cf4c96b5b88f"
              }
            },
            {
              "name": "id",
              "in": "path",
              "description": "Store's Customer ID",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Store's Customer ID",
                "nullable": true,
                "example": "CUST01234"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/CauseDonationResponse"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CauseDonationResponse"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CauseDonationResponse"
                  }
                }
              }
            }
          },
          "security": [
            {
              "bearer": [ ]
            },
            {
              "API Key": [ ]
            }
          ]
        }
      },
      "/reporting/customer/{id}/get-order": {
        "get": {
          "tags": [
            "Donations"
          ],
          "summary": "Get specific order donation information for customer",
          "description": "Authorization: Store:Donation:Read",
          "parameters": [
            {
              "name": "x-store-id",
              "in": "header",
              "description": "ShoppingGives Store ID",
              "schema": {
                "type": "string",
                "description": "ShoppingGives Store ID",
                "format": "uuid",
                "example": "321944e1-470d-4b0d-a3d8-cf4c96b5b88f"
              }
            },
            {
              "name": "id",
              "in": "path",
              "description": "Store's Customer ID",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Store's Customer ID",
                "nullable": true,
                "example": "CUST01234"
              }
            },
            {
              "name": "orderId",
              "in": "query",
              "description": "Store's Order ID",
              "schema": {
                "type": "string",
                "description": "Store's Order ID",
                "nullable": true,
                "example": "4123"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/OrderResponse"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/OrderResponse"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/OrderResponse"
                  }
                }
              }
            },
            "404": {
              "description": "No order for customer found with supplied id"
            }
          },
          "security": [
            {
              "bearer": [ ]
            },
            {
              "API Key": [ ]
            }
          ]
        }
      },
      "/reporting/customer/{id}/last-order": {
        "get": {
          "tags": [
            "Donations"
          ],
          "summary": "Get most recent order donation information for customer",
          "description": "Authorization: Store:Donation:Read",
          "parameters": [
            {
              "name": "x-store-id",
              "in": "header",
              "description": "ShoppingGives Store ID",
              "schema": {
                "type": "string",
                "description": "ShoppingGives Store ID",
                "format": "uuid",
                "example": "321944e1-470d-4b0d-a3d8-cf4c96b5b88f"
              }
            },
            {
              "name": "id",
              "in": "path",
              "description": "Store's Customer ID",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Store's Customer ID",
                "nullable": true,
                "example": "CUST01234"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/OrderResponse"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/OrderResponse"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/OrderResponse"
                  }
                }
              }
            },
            "404": {
              "description": "No order for customer found"
            }
          },
          "security": [
            {
              "bearer": [ ]
            },
            {
              "API Key": [ ]
            }
          ]
        }
      },
      "/reporting/customer/{id}/orders": {
        "get": {
          "tags": [
            "Donations"
          ],
          "summary": "Get orders' donation information for a customer",
          "description":"Authorization: Store:Donation:Read",
          "parameters": [
            {
              "name": "x-store-id",
              "in": "header",
              "description": "ShoppingGives Store ID",
              "schema": {
                "type": "string",
                "description": "ShoppingGives Store ID",
                "format": "uuid",
                "example": "321944e1-470d-4b0d-a3d8-cf4c96b5b88f"
              }
            },
            {
              "name": "id",
              "in": "path",
              "description": "Store's Customer ID",
              "required": true,
              "schema": {
                "type": "string",
                "description": "Store's Customer ID",
                "nullable": true,
                "example": "CUST01234"
              }
            },
            {
              "name": "pageLength",
              "in": "query",
              "description": "Number of results to return (Default = 25)",
              "schema": {
                "type": "integer",
                "description": "Number of results to return (Default = 25)",
                "format": "int32",
                "nullable": true,
                "example": 10
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Current page of results (Default = 1)",
              "schema": {
                "type": "integer",
                "description": "Current page of results (Default = 1)",
                "format": "int32",
                "nullable": true,
                "example": 5
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/OrderResponse"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/OrderResponse"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/OrderResponse"
                  }
                }
              }
            }
          },
          "security": [
            {
              "bearer": [ ]
            },
            {
              "API Key": [ ]
            }
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "CreateDonationRequest": {
          "required": [
            "causeId"
          ],
          "type": "object",
          "properties": {
            "locationId": {
              "type": "string",
              "description": "The location ID (Optional) (For Point of Sale ONLY)",
              "format": "uuid",
              "nullable": true,
              "example": "461a8604-b79d-40f0-b609-f35366f08c20"
            },
            "causeId": {
              "type": "string",
              "description": "The cause ID",
              "example": "392008377"
            },
            "donationAmount": {
              "type": "number",
              "description": "The donation amount",
              "format": "double",
              "example": 2.02
            },
            "orderId": {
              "type": "string",
              "description": "Store's internal order id",
              "nullable": true,
              "example": "#4123"
            },
            "total": {
              "type": "number",
              "description": "The original total amount paid by the shopper",
              "format": "double",
              "example": 5.2
            },
            "source": {
              "type": "integer",
              "description": "The donation source (0 = CCv2, 1 = CCv2, 2 = Yotpo Points, 3 = Point of Sale)",
              "format": "int32",
              "example": 0
            },
            "lockDateUtc": {
              "type": "string",
              "description": "Date after which the donation cannot be altered (Optional) (Default = Now)",
              "format": "date-time",
              "nullable": true,
              "example": "2021-03-11T18:59:20.0000000+00:00"
            },
            "orderCreatedAtUtc": {
              "type": "string",
              "description": "When the order was created at (in UTC)",
              "format": "date-time",
              "nullable": true,
              "example": "2021-03-11T18:59:20.0000000+00:00"
            },
            "userId": {
              "type": "string",
              "description": "Allows attribution of donation to a ShoppingGives User",
              "format": "uuid",
              "nullable": true,
              "example": "461a8604-b79d-40f0-b609-f35366f08c20"
            },
            "customerId": {
              "type": "string",
              "description": "Store's Customer ID for reporting purposes",
              "nullable": true,
              "example": "4575132647610"
            }
          },
          "additionalProperties": false
        },
        "DocErrorResponse": {
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "nullable": true
            },
            "statusCode": {
              "type": "integer",
              "format": "int32"
            },
            "message": {
              "type": "string",
              "nullable": true
            },
            "validationFailures": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Validation Failures (on 400 BadRequest)",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "IdResponse": {
          "type": "object",
          "properties": {
            "donationId": {
              "type": "string",
              "description": "Id of generated donation",
              "nullable": true,
              "example": "45678"
            }
          },
          "additionalProperties": false
        },
        "DonationStatus": {
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer",
          "format": "int32"
        },
        "CharityResponse": {
          "type": "object",
          "properties": {
            "ein": {
              "type": "integer",
              "description": "EIN of the charity",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "description": "Name of the charity",
              "nullable": true,
              "example": "Some Charity"
            },
            "categoryId": {
              "type": "integer",
              "description": "Category Id",
              "format": "int32"
            },
            "categoryName": {
              "type": "string",
              "description": "Category Name",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PortfolioResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Portfolio ID",
              "format": "uuid"
            },
            "name": {
              "type": "string",
              "description": "Portfolio Name",
              "nullable": true,
              "example": "Some Portfolio"
            },
            "charities": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CharityResponse"
              },
              "description": "Charities associated to Portfolio",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "DonationResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "ShoppingGives ID of donation",
              "format": "uuid"
            },
            "saleId": {
              "type": "string",
              "description": "ShoppingGives Sale ID associated to donation",
              "format": "uuid",
              "nullable": true,
              "example": "d8b3bf08-85ca-4952-80e8-ff8b39eab8b6"
            },
            "storeId": {
              "type": "string",
              "description": "ShoppingGives Store ID",
              "format": "uuid",
              "example":"461a8604-b79d-40f0-b609-f35366f08c20"
            },
            "status": {
              "$ref": "#/components/schemas/DonationStatus"
            },
            "causeId": {
              "type": "string",
              "description": "Cause Id (Can be either int for charity or uuid for portfolio)",
              "nullable": true,
              "example": "392008377"
            },
            "donationAmount": {
              "type": "number",
              "description": "Amount of donation",
              "format": "double",
              "example": 4
            },
            "receivableId": {
              "type": "string",
              "description": "ShoppingGives Receivable Id",
              "format": "uuid",
              "nullable": true,
              "example": "c1fec9cd-2975-43a0-bb8e-d3db5f534ea6"
            },
            "portfolioInfo": {
              "$ref": "#/components/schemas/PortfolioResponse"
            },
            "charityInfo": {
              "$ref": "#/components/schemas/CharityResponse"
            },
            "wasPartialRefund": {
              "type": "boolean",
              "description": "If the donation was affected by a partial refund"
            },
            "lockDateUtc": {
              "type": "string",
              "description": "Time at which the donation cannot be changed",
              "format": "date-time",
              "nullable": true,
              "example": "2021-03-11T18:59:20.0000000+00:00"

            },
            "attemptedRefundButAlreadyPaid": {
              "type": "boolean",
              "description": "If the donation refund generated donations but store already paid donation"
            },
            "orderCreatedAtUtc": {
              "type": "string",
              "description": "When order was created (UTC) (if supplied)",
              "format": "date-time",
              "nullable": true,
              "example": "2021-03-11T18:59:20.0000000+00:00"

            },
            "paidByCustomer": {
              "type": "boolean",
              "description": "If the donation was paid for by a customer through Direct Donation"
            },
            "directDonationType": {
              "type": "integer",
              "description": "(Nullable) Type of direct donation (0 = Add-On, 1 = Round Up)",
              "format": "int32",
              "nullable": true,
              "example": 0
            }
          },
          "additionalProperties": false
        },
        "CustomerDonationTotalsReadModelResponse": {
          "type": "object",
          "properties": {
            "totalDonations": {
              "type": "number",
              "description": "Total amount of donations generated",
              "format": "double",
              "example": 1000
            },
            "customerExists": {
              "type": "boolean",
              "description": "Whether the customer exists or not"
            }
          },
          "additionalProperties": false
        },
        "CustomerDonationTotalsResponse": {
          "type": "object",
          "properties": {
            "total": {
              "$ref": "#/components/schemas/CustomerDonationTotalsReadModelResponse"
            }
          },
          "additionalProperties": false
        },
        "CauseDonationReadModelResponse": {
          "type": "object",
          "properties": {
            "cause": {
              "type": "string",
              "description": "Cause name",
              "nullable": true,
              "example": "Some Charity"
            },
            "donations": {
              "type": "number",
              "description": "Amount donated to cause",
              "format": "double",
              "example": 4
            }
          },
          "additionalProperties": false
        },
        "CauseDonationResponse": {
          "type": "object",
          "properties": {
            "donations": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CauseDonationReadModelResponse"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "OrderReadModelResponse": {
          "type": "object",
          "properties": {
            "orderId": {
              "type": "string",
              "description": "Store's order id",
              "nullable": true,
              "example": "#4123"
            },
            "causeName": {
              "type": "string",
              "description": "Donation cause name",
              "nullable": true,
              "example": "Some Charity"
            },
            "orderDate": {
              "type": "string",
              "description": "Date of order",
              "format": "date-time",
              "example": "2021-03-11T18:59:20.0000000+00:00"

            },
            "orderTotal": {
              "type": "number",
              "description": "Total paid by customer for order",
              "format": "double",
              "example": 110
            },
            "donationAmount": {
              "type": "number",
              "description": "The amount of the donation",
              "format": "double",
              "example": 4
            }
          },
          "additionalProperties": false
        },
        "OrderResponse": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean"
            },
            "order": {
              "$ref": "#/components/schemas/OrderReadModelResponse"
            }
          },
          "additionalProperties": false
        }
      },
      "securitySchemes": {
        "bearer": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        },
        "API Key": {
          "type": "apiKey",
          "description": "ShoppingGives API KEY",
          "name": "x-store-api-key",
          "in": "header"
        }
      }
    }
  }